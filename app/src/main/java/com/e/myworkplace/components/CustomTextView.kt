package com.e.myworkplace.componentsimport android.content.Contextimport android.graphics.Typefaceimport android.util.AttributeSetimport androidx.appcompat.widget.AppCompatTextViewimport com.e.myworkplace.Rimport java.util.Locale/** * Created by lenovo on 10/25/2016. */class CustomTextView : AppCompatTextView {    internal var type = 0    constructor(context: Context) : super(context) {        val am = getContext().applicationContext.assets        val typeface = Typeface.createFromAsset(            am,            String.format(Locale.US, "fonts/%s", "SourceSansPro-Regular.ttf")        )        setTypeface(typeface)    }    constructor(context: Context, attrs: AttributeSet) : super(context, attrs) {        val am = getContext().applicationContext.assets        val typeface = Typeface.createFromAsset(am, String.format(Locale.US, "fonts/%s", getFontFamily(context, attrs)))        setTypeface(typeface)    }    constructor(context: Context, attrs: AttributeSet, defStyleAttr: Int) : super(context, attrs, defStyleAttr) {        val am = getContext().applicationContext.assets        val typeface = Typeface.createFromAsset(            am,            String.format(Locale.US, "fonts/%s", getFontFamily(context, attrs))        )        setTypeface(typeface)    }    private fun getFontFamily(context: Context, attrs: AttributeSet): String {        val a = context.theme.obtainStyledAttributes(            attrs,            R.styleable.CustomTextView,            0, 0        )        try {            type = a.getInt(R.styleable.CustomTextView_textFontStyle, 0)        } finally {            a.recycle()            return if (type == 0)                "SourceSansPro-Bold.ttf"            else if(type==1)                "SourceSansPro-Italic.ttf"            else if (type==2)                "SourceSansPro-Light.ttf"            else "SourceSansPro-Regular.ttf"        }    }}